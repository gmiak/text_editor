{"ast":null,"code":"var _jsxFileName = \"/home/georges/University/BTH/Javascript_baserade_webbramverk_DV1612(jsramverk)/text_editor/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n/*\n** Add 2x/  to any files you want to type check.\n** Now can you run npm run flow to ckeck the files for errors. \n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = React.useState(null);\n  React.useEffect(() => {\n    fetch(\"/api\").then(res => res.json()).then(data => setData(data.message));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: !data ? \"Loading...\" : data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","logo","App","data","setData","useState","useEffect","fetch","then","res","json","message"],"sources":["/home/georges/University/BTH/Javascript_baserade_webbramverk_DV1612(jsramverk)/text_editor/client/src/App.js"],"sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n// @flow\n\n/*\n** Add 2x/ @flow to any files you want to type check.\n** Now can you run npm run flow to ckeck the files for errors. \n*/\n\nfunction App() {\n\n  const [data, setData] = React.useState(null);\n\n  React.useEffect(() => {\n    fetch(\"/api\")\n      .then((res) => res.json())\n      .then((data) => setData(data.message));\n  }, []);\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>{!data ? \"Loading...\" : data}</p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AAGA;AACA;AACA;AACA;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,KAAK,CAACK,QAAN,CAAe,IAAf,CAAxB;EAEAL,KAAK,CAACM,SAAN,CAAgB,MAAM;IACpBC,KAAK,CAAC,MAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESL,IAAD,IAAUC,OAAO,CAACD,IAAI,CAACQ,OAAN,CAFzB;EAGD,CAJD,EAIG,EAJH;EAMA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE;MAAQ,SAAS,EAAC,YAAlB;MAAA,wBACE;QAAK,GAAG,EAAEV,IAAV;QAAgB,SAAS,EAAC,UAA1B;QAAqC,GAAG,EAAC;MAAzC;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAI,CAACE,IAAD,GAAQ,YAAR,GAAuBA;MAA3B;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GAlBQD,G;;KAAAA,G;AAoBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}